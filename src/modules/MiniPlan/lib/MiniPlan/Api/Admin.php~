<?php
/**
 * This is the User controller class providing navigation and interaction functionality.
 */
class MiniPlan_Api_Admin extends Zikula_AbstractApi
{
	/**
	 * @brief Get available admin panel links
	 *
	 * @return array array of admin links
	 */
	public function getlinks()
	{
		$links = array();
		if (SecurityUtil::checkPermission('MiniPlan::', '::', ACCESS_ADMIN)) {
			$links[] = array(
				'url'=> ModUtil::url('MiniPlan', 'admin', 'main'),
				'text'  => $this->__('Main'),
				'title' => $this->__('Main'),
				'class' => 'z-icon-es-config',
			);
		}
		
		if (SecurityUtil::checkPermission('MiniPlan::', '::', ACCESS_MODERATE)) {
			$links[] = array(
				'url'=> ModUtil::url('MiniPlan', 'admin', 'ChurchesView'),
				'text'  => $this->__('Churches'),
				'title' => $this->__('Churches'),
				'class' => 'z-icon-es-display',
			);
		}
		
		if (SecurityUtil::checkPermission('MiniPlan::', '::', ACCESS_MODERATE)) {
			$links[] = array(
				'url'=> ModUtil::url('MiniPlan', 'admin', 'Worships'),
				'text'  => $this->__('Worships'),
				'title' => $this->__('Worships'),
				'class' => 'z-icon-es-display',
			);
		}
		
		if (SecurityUtil::checkPermission('MiniPlan::', '::', ACCESS_MODERATE)) {
			$links[] = array(
				'url'=> ModUtil::url('MiniPlan', 'admin', 'Ministrants'),
				'text'  => $this->__('Ministrants'),
				'title' => $this->__('List of all Ministrants'),
				'class' => 'z-icon-es-display',
			);
		}
		
		if (SecurityUtil::checkPermission('MiniPlan::', '::', ACCESS_MODERATE)) {
			$links[] = array(
				'url'=> ModUtil::url('MiniPlan', 'admin', 'Restriction'),
				'text'  => $this->__('Table of all restrictions.'),
				'title' => $this->__('Restriction'),
				'class' => 'z-icon-es-display',
			);
		}
		return $links;
	}
	
	public function getChurchSelector($args)
	{
		$churches = $this->entityManager->getRepository('MiniPlan_Entity_Churches')->findBy(array());
		
		$list = "<select name=\"{$args['name']}\">";
		
		foreach($churches as $church)
		{
			$list .="<option value=\"{$church->getCid()}\"> {$church->getName()} </option>";
		}
		$list .="</select>";
		return $list;
	}
	
	public function getChurchNameById($args)
	{
		$church = $this->entityManager->find('MiniPlan_Entity_Churches', $args['id']);
		return $church->getName();
	}
	
}
